/**********************************************************************
 * Extern for jQuery
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var jQuery = {
    "Deferred": function () {},
    "Event": function () {},
    "_Deferred": function () {},
    "_data": function () {},
    "_mark": function () {},
    "_unmark": function () {},
    "acceptData": function () {},
    "access": function () {},
    "active": {},
    "ajax": function () {},
    "ajaxPrefilter": function () {},
    "ajaxSettings": {
      "accepts": {
        "*": {},
        "html": {},
        "json": {},
        "script": {},
        "text": {},
        "xml": {}
      },
      "async": {},
      "contentType": {},
      "contents": {
        "html": {},
        "json": {},
        "script": {},
        "xml": {}
      },
      "converters": {
        "* text": function () {},
        "text html": {},
        "text json": function () {},
        "text script": function () {},
        "text xml": function () {}
      },
      "flatOptions": {
        "context": {},
        "url": {}
      },
      "global": {},
      "isLocal": {},
      "jsonp": {},
      "jsonpCallback": function () {},
      "processData": {},
      "responseFields": {
        "text": {},
        "xml": {}
      },
      "type": {},
      "url": {},
      "xhr": function () {}
    },
    "ajaxSetup": function () {},
    "ajaxTransport": function () {},
    "attr": function () {},
    "attrFix": {
      "tabindex": {}
    },
    "attrFn": {
      "blur": {},
      "change": {},
      "click": {},
      "css": {},
      "data": {},
      "dblclick": {},
      "error": {},
      "focus": {},
      "focusin": {},
      "focusout": {},
      "height": {},
      "html": {},
      "keydown": {},
      "keypress": {},
      "keyup": {},
      "load": {},
      "mousedown": {},
      "mouseenter": {},
      "mouseleave": {},
      "mousemove": {},
      "mouseout": {},
      "mouseover": {},
      "mouseup": {},
      "offset": {},
      "resize": {},
      "scroll": {},
      "select": {},
      "submit": {},
      "text": {},
      "unload": {},
      "val": {},
      "width": {}
    },
    "attrHooks": {
      "tabIndex": {
        "get": function () {}
      },
      "type": {
        "set": function () {}
      },
      "value": {
        "get": function () {},
        "set": function () {}
      }
    },
    "bindReady": function () {},
    "boxModel": {},
    "browser": {
      "mozilla": {},
      "version": {}
    },
    "buildFragment": function () {},
    "cache": {},
    "camelCase": function () {},
    "clean": function () {},
    "cleanData": function () {},
    "clone": function () {},
    "connection": {
      "_": {
        "configurePingInterval": function () {},
        "defaultContentType": {},
        "error": function () {},
        "firefoxMajorVersion": function () {},
        "format": function () {},
        "ieVersion": {},
        "transportError": function () {}
      },
      "ajaxDefaults": {
        "async": {},
        "cache": {},
        "global": {},
        "processData": {},
        "timeout": {}
      },
      "changeState": function () {},
      "connectionState": {
        "connected": {},
        "connecting": {},
        "disconnected": {},
        "reconnecting": {}
      },
      "events": {
        "onConnectionSlow": {},
        "onDisconnect": {},
        "onError": {},
        "onReceived": {},
        "onReconnect": {},
        "onReconnecting": {},
        "onStart": {},
        "onStarting": {},
        "onStateChanged": {}
      },
      "fn": {
        "_originalJson": {},
        "_parseResponse": function () {},
        "ajaxDataType": {},
        "clientProtocol": {},
        "connectionSlow": function () {},
        "contentType": {},
        "disconnectTimeout": {},
        "disconnected": function () {},
        "error": function () {},
        "init": function () {},
        "isCrossDomain": function () {},
        "json": {},
        "keepAliveWarnAt": {},
        "log": function () {},
        "logging": {},
        "received": function () {},
        "reconnectDelay": {},
        "reconnectWindow": {},
        "reconnected": function () {},
        "reconnecting": function () {},
        "send": function () {},
        "start": function () {},
        "starting": function () {},
        "state": {},
        "stateChanged": function () {},
        "stop": function () {},
        "transportConnectTimeout": {}
      },
      "hub": {
        "start": function () {}
      },
      "isDisconnecting": function () {},
      "noConflict": function () {},
      "resources": {
        "errorDuringStartRequest": {},
        "errorOnNegotiate": {},
        "errorParsingNegotiateResponse": {},
        "errorParsingStartResponse": {},
        "eventSourceError": {},
        "eventSourceFailedToConnect": {},
        "invalidStartResponse": {},
        "longPollFailed": {},
        "noConnectionTransport": {},
        "noTransportOnInit": {},
        "nojQuery": {},
        "parseFailed": {},
        "pingServerFailed": {},
        "pingServerFailedInvalidResponse": {},
        "pingServerFailedParse": {},
        "pingServerFailedStatusCode": {},
        "protocolIncompatible": {},
        "reconnectTimeout": {},
        "reconnectWindowTimeout": {},
        "sendFailed": {},
        "stoppedDuringStartRequest": {},
        "stoppedWhileLoading": {},
        "stoppedWhileNegotiating": {},
        "webSocketClosed": {},
        "webSocketsInvalidState": {}
      },
      "transports": {
        "_logic": {
          "addQs": function () {},
          "ajax": function () {},
          "ajaxAbort": function () {},
          "ajaxSend": function () {},
          "ajaxStart": function () {},
          "clearReconnectTimeout": function () {},
          "ensureReconnectingState": function () {},
          "foreverFrame": {
            "connections": {},
            "count": {}
          },
          "getUrl": function () {},
          "handleParseFailure": function () {},
          "initHandler": function () {},
          "isConnectedOrReconnecting": function () {},
          "markActive": function () {},
          "markLastMessage": function () {},
          "maximizePersistentResponse": function () {},
          "monitorKeepAlive": function () {},
          "pingServer": function () {},
          "prepareQueryString": function () {},
          "processMessages": function () {},
          "reconnect": function () {},
          "startHeartbeat": function () {},
          "stopMonitoringKeepAlive": function () {},
          "stringifySend": function () {},
          "triggerReceived": function () {},
          "tryAbortStartRequest": function () {},
          "tryInitialize": function () {},
          "updateGroups": function () {},
          "verifyLastActive": function () {}
        },
        "foreverFrame": {
          "abort": function () {},
          "getConnection": function () {},
          "iframeClearThreshold": {},
          "lostConnection": function () {},
          "name": {},
          "receive": function () {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "started": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        },
        "longPolling": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnectDelay": {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        },
        "serverSentEvents": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {},
          "timeOut": {}
        },
        "webSockets": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        }
      },
      "version": {}
    },
    "contains": function () {},
    "css": function () {},
    "cssHooks": {
      "height": {
        "get": function () {},
        "set": function () {}
      },
      "opacity": {
        "get": function () {}
      },
      "width": {
        "get": function () {},
        "set": function () {}
      }
    },
    "cssNumber": {
      "fillOpacity": {},
      "fontWeight": {},
      "lineHeight": {},
      "opacity": {},
      "orphans": {},
      "widows": {},
      "zIndex": {},
      "zoom": {}
    },
    "cssProps": {
      "float": {}
    },
    "curCSS": function () {},
    "data": function () {},
    "dequeue": function () {},
    "dir": function () {},
    "each": function () {},
    "easing": {
      "linear": function () {},
      "swing": function () {}
    },
    "error": function () {},
    "etag": {},
    "event": {
      "add": function () {},
      "customEvent": {
        "changeData": {},
        "getData": {},
        "setData": {}
      },
      "fix": function () {},
      "global": {
        "load": {}
      },
      "guid": {},
      "handle": function () {},
      "props": {},
      "proxy": function () {},
      "remove": function () {},
      "special": {
        "beforeunload": {
          "setup": function () {},
          "teardown": function () {}
        },
        "focusin": {
          "setup": function () {},
          "teardown": function () {}
        },
        "focusout": {
          "setup": function () {},
          "teardown": function () {}
        },
        "live": {
          "add": function () {},
          "remove": function () {}
        },
        "mouseenter": {
          "setup": function () {},
          "teardown": function () {}
        },
        "mouseleave": {
          "setup": function () {},
          "teardown": function () {}
        },
        "ready": {
          "setup": function () {},
          "teardown": function () {}
        }
      },
      "trigger": function () {},
      "triggered": {}
    },
    "expando": {},
    "expr": {
      ":": {
        "animated": function () {},
        "button": function () {},
        "checkbox": function () {},
        "checked": function () {},
        "disabled": function () {},
        "empty": function () {},
        "enabled": function () {},
        "file": function () {},
        "focus": function () {},
        "has": function () {},
        "header": function () {},
        "hidden": function () {},
        "image": function () {},
        "input": function () {},
        "parent": function () {},
        "password": function () {},
        "radio": function () {},
        "reset": function () {},
        "selected": function () {},
        "submit": function () {},
        "text": function () {},
        "visible": function () {}
      },
      "attrHandle": {
        "href": function () {},
        "type": function () {}
      },
      "attrMap": {
        "class": {},
        "for": {}
      },
      "filter": {
        "ATTR": function () {},
        "CHILD": function () {},
        "CLASS": function () {},
        "ID": function () {},
        "POS": function () {},
        "PSEUDO": function () {},
        "TAG": function () {}
      },
      "filters": {
        "animated": function () {},
        "button": function () {},
        "checkbox": function () {},
        "checked": function () {},
        "disabled": function () {},
        "empty": function () {},
        "enabled": function () {},
        "file": function () {},
        "focus": function () {},
        "has": function () {},
        "header": function () {},
        "hidden": function () {},
        "image": function () {},
        "input": function () {},
        "parent": function () {},
        "password": function () {},
        "radio": function () {},
        "reset": function () {},
        "selected": function () {},
        "submit": function () {},
        "text": function () {},
        "visible": function () {}
      },
      "find": {
        "CLASS": function () {},
        "ID": function () {},
        "NAME": function () {},
        "TAG": function () {}
      },
      "leftMatch": {
        "ATTR": {},
        "CHILD": {},
        "CLASS": {},
        "ID": {},
        "NAME": {},
        "POS": {},
        "PSEUDO": {},
        "TAG": {}
      },
      "match": {
        "ATTR": {},
        "CHILD": {},
        "CLASS": {},
        "ID": {},
        "NAME": {},
        "POS": {},
        "PSEUDO": {},
        "TAG": {}
      },
      "order": {},
      "preFilter": {
        "ATTR": function () {},
        "CHILD": function () {},
        "CLASS": function () {},
        "ID": function () {},
        "POS": function () {},
        "PSEUDO": function () {},
        "TAG": function () {}
      },
      "relative": {
        "": function () {},
        "+": function () {},
        ">": function () {},
        "~": function () {}
      },
      "setFilters": {
        "eq": function () {},
        "even": function () {},
        "first": function () {},
        "gt": function () {},
        "last": function () {},
        "lt": function () {},
        "nth": function () {},
        "odd": function () {}
      }
    },
    "extend": function () {},
    "filter": function () {},
    "find": {
      "contains": function () {},
      "error": function () {},
      "filter": function () {},
      "find": function () {},
      "getText": function () {},
      "isXML": function () {},
      "matches": function () {},
      "matchesSelector": function () {},
      "selectors": {
        ":": {
          "animated": function () {},
          "button": function () {},
          "checkbox": function () {},
          "checked": function () {},
          "disabled": function () {},
          "empty": function () {},
          "enabled": function () {},
          "file": function () {},
          "focus": function () {},
          "has": function () {},
          "header": function () {},
          "hidden": function () {},
          "image": function () {},
          "input": function () {},
          "parent": function () {},
          "password": function () {},
          "radio": function () {},
          "reset": function () {},
          "selected": function () {},
          "submit": function () {},
          "text": function () {},
          "visible": function () {}
        },
        "attrHandle": {
          "href": function () {},
          "type": function () {}
        },
        "attrMap": {
          "class": {},
          "for": {}
        },
        "filter": {
          "ATTR": function () {},
          "CHILD": function () {},
          "CLASS": function () {},
          "ID": function () {},
          "POS": function () {},
          "PSEUDO": function () {},
          "TAG": function () {}
        },
        "filters": {
          "animated": function () {},
          "button": function () {},
          "checkbox": function () {},
          "checked": function () {},
          "disabled": function () {},
          "empty": function () {},
          "enabled": function () {},
          "file": function () {},
          "focus": function () {},
          "has": function () {},
          "header": function () {},
          "hidden": function () {},
          "image": function () {},
          "input": function () {},
          "parent": function () {},
          "password": function () {},
          "radio": function () {},
          "reset": function () {},
          "selected": function () {},
          "submit": function () {},
          "text": function () {},
          "visible": function () {}
        },
        "find": {
          "CLASS": function () {},
          "ID": function () {},
          "NAME": function () {},
          "TAG": function () {}
        },
        "leftMatch": {
          "ATTR": {},
          "CHILD": {},
          "CLASS": {},
          "ID": {},
          "NAME": {},
          "POS": {},
          "PSEUDO": {},
          "TAG": {}
        },
        "match": {
          "ATTR": {},
          "CHILD": {},
          "CLASS": {},
          "ID": {},
          "NAME": {},
          "POS": {},
          "PSEUDO": {},
          "TAG": {}
        },
        "order": {},
        "preFilter": {
          "ATTR": function () {},
          "CHILD": function () {},
          "CLASS": function () {},
          "ID": function () {},
          "POS": function () {},
          "PSEUDO": function () {},
          "TAG": function () {}
        },
        "relative": {
          "": function () {},
          "+": function () {},
          ">": function () {},
          "~": function () {}
        },
        "setFilters": {
          "eq": function () {},
          "even": function () {},
          "first": function () {},
          "gt": function () {},
          "last": function () {},
          "lt": function () {},
          "nth": function () {},
          "odd": function () {}
        }
      },
      "uniqueSort": function () {}
    },
    "fn": {
      "_toggle": function () {},
      "add": function () {},
      "addClass": function () {},
      "after": function () {},
      "ajaxComplete": function () {},
      "ajaxError": function () {},
      "ajaxSend": function () {},
      "ajaxStart": function () {},
      "ajaxStop": function () {},
      "ajaxSuccess": function () {},
      "andSelf": function () {},
      "animate": function () {},
      "append": function () {},
      "appendTo": function () {},
      "attr": function () {},
      "before": function () {},
      "bind": function () {},
      "blur": function () {},
      "change": function () {},
      "children": function () {},
      "clearQueue": function () {},
      "click": function () {},
      "clone": function () {},
      "closest": function () {},
      "constructor": {
        "Deferred": function () {},
        "Event": function () {},
        "_Deferred": function () {},
        "_data": function () {},
        "_mark": function () {},
        "_unmark": function () {},
        "acceptData": function () {},
        "access": function () {},
        "active": {},
        "ajax": function () {},
        "ajaxPrefilter": function () {},
        "ajaxSettings": {
          "accepts": {
            "*": {},
            "html": {},
            "json": {},
            "script": {},
            "text": {},
            "xml": {}
          },
          "async": {},
          "contentType": {},
          "contents": {
            "html": {},
            "json": {},
            "script": {},
            "xml": {}
          },
          "converters": {
            "* text": function () {},
            "text html": {},
            "text json": function () {},
            "text script": function () {},
            "text xml": function () {}
          },
          "flatOptions": {
            "context": {},
            "url": {}
          },
          "global": {},
          "isLocal": {},
          "jsonp": {},
          "jsonpCallback": function () {},
          "processData": {},
          "responseFields": {
            "text": {},
            "xml": {}
          },
          "type": {},
          "url": {},
          "xhr": function () {}
        },
        "ajaxSetup": function () {},
        "ajaxTransport": function () {},
        "attr": function () {},
        "attrFix": {
          "tabindex": {}
        },
        "attrFn": {
          "blur": {},
          "change": {},
          "click": {},
          "css": {},
          "data": {},
          "dblclick": {},
          "error": {},
          "focus": {},
          "focusin": {},
          "focusout": {},
          "height": {},
          "html": {},
          "keydown": {},
          "keypress": {},
          "keyup": {},
          "load": {},
          "mousedown": {},
          "mouseenter": {},
          "mouseleave": {},
          "mousemove": {},
          "mouseout": {},
          "mouseover": {},
          "mouseup": {},
          "offset": {},
          "resize": {},
          "scroll": {},
          "select": {},
          "submit": {},
          "text": {},
          "unload": {},
          "val": {},
          "width": {}
        },
        "attrHooks": {
          "tabIndex": {
            "get": function () {}
          },
          "type": {
            "set": function () {}
          },
          "value": {
            "get": function () {},
            "set": function () {}
          }
        },
        "bindReady": function () {},
        "boxModel": {},
        "browser": {
          "mozilla": {},
          "version": {}
        },
        "buildFragment": function () {},
        "cache": {},
        "camelCase": function () {},
        "clean": function () {},
        "cleanData": function () {},
        "clone": function () {},
        "connection": {
          "_": {
            "configurePingInterval": function () {},
            "defaultContentType": {},
            "error": function () {},
            "firefoxMajorVersion": function () {},
            "format": function () {},
            "ieVersion": {},
            "transportError": function () {}
          },
          "ajaxDefaults": {
            "async": {},
            "cache": {},
            "global": {},
            "processData": {},
            "timeout": {}
          },
          "changeState": function () {},
          "connectionState": {
            "connected": {},
            "connecting": {},
            "disconnected": {},
            "reconnecting": {}
          },
          "events": {
            "onConnectionSlow": {},
            "onDisconnect": {},
            "onError": {},
            "onReceived": {},
            "onReconnect": {},
            "onReconnecting": {},
            "onStart": {},
            "onStarting": {},
            "onStateChanged": {}
          },
          "fn": {
            "_originalJson": {},
            "_parseResponse": function () {},
            "ajaxDataType": {},
            "clientProtocol": {},
            "connectionSlow": function () {},
            "contentType": {},
            "disconnectTimeout": {},
            "disconnected": function () {},
            "error": function () {},
            "init": function () {},
            "isCrossDomain": function () {},
            "json": {},
            "keepAliveWarnAt": {},
            "log": function () {},
            "logging": {},
            "received": function () {},
            "reconnectDelay": {},
            "reconnectWindow": {},
            "reconnected": function () {},
            "reconnecting": function () {},
            "send": function () {},
            "start": function () {},
            "starting": function () {},
            "state": {},
            "stateChanged": function () {},
            "stop": function () {},
            "transportConnectTimeout": {}
          },
          "hub": {
            "start": function () {}
          },
          "isDisconnecting": function () {},
          "noConflict": function () {},
          "resources": {
            "errorDuringStartRequest": {},
            "errorOnNegotiate": {},
            "errorParsingNegotiateResponse": {},
            "errorParsingStartResponse": {},
            "eventSourceError": {},
            "eventSourceFailedToConnect": {},
            "invalidStartResponse": {},
            "longPollFailed": {},
            "noConnectionTransport": {},
            "noTransportOnInit": {},
            "nojQuery": {},
            "parseFailed": {},
            "pingServerFailed": {},
            "pingServerFailedInvalidResponse": {},
            "pingServerFailedParse": {},
            "pingServerFailedStatusCode": {},
            "protocolIncompatible": {},
            "reconnectTimeout": {},
            "reconnectWindowTimeout": {},
            "sendFailed": {},
            "stoppedDuringStartRequest": {},
            "stoppedWhileLoading": {},
            "stoppedWhileNegotiating": {},
            "webSocketClosed": {},
            "webSocketsInvalidState": {}
          },
          "transports": {
            "_logic": {
              "addQs": function () {},
              "ajax": function () {},
              "ajaxAbort": function () {},
              "ajaxSend": function () {},
              "ajaxStart": function () {},
              "clearReconnectTimeout": function () {},
              "ensureReconnectingState": function () {},
              "foreverFrame": {
                "connections": {},
                "count": {}
              },
              "getUrl": function () {},
              "handleParseFailure": function () {},
              "initHandler": function () {},
              "isConnectedOrReconnecting": function () {},
              "markActive": function () {},
              "markLastMessage": function () {},
              "maximizePersistentResponse": function () {},
              "monitorKeepAlive": function () {},
              "pingServer": function () {},
              "prepareQueryString": function () {},
              "processMessages": function () {},
              "reconnect": function () {},
              "startHeartbeat": function () {},
              "stopMonitoringKeepAlive": function () {},
              "stringifySend": function () {},
              "triggerReceived": function () {},
              "tryAbortStartRequest": function () {},
              "tryInitialize": function () {},
              "updateGroups": function () {},
              "verifyLastActive": function () {}
            },
            "foreverFrame": {
              "abort": function () {},
              "getConnection": function () {},
              "iframeClearThreshold": {},
              "lostConnection": function () {},
              "name": {},
              "receive": function () {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "started": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            },
            "longPolling": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnectDelay": {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            },
            "serverSentEvents": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {},
              "timeOut": {}
            },
            "webSockets": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            }
          },
          "version": {}
        },
        "contains": function () {},
        "css": function () {},
        "cssHooks": {
          "height": {
            "get": function () {},
            "set": function () {}
          },
          "opacity": {
            "get": function () {}
          },
          "width": {
            "get": function () {},
            "set": function () {}
          }
        },
        "cssNumber": {
          "fillOpacity": {},
          "fontWeight": {},
          "lineHeight": {},
          "opacity": {},
          "orphans": {},
          "widows": {},
          "zIndex": {},
          "zoom": {}
        },
        "cssProps": {
          "float": {}
        },
        "curCSS": function () {},
        "data": function () {},
        "dequeue": function () {},
        "dir": function () {},
        "each": function () {},
        "easing": {
          "linear": function () {},
          "swing": function () {}
        },
        "error": function () {},
        "etag": {},
        "event": {
          "add": function () {},
          "customEvent": {
            "changeData": {},
            "getData": {},
            "setData": {}
          },
          "fix": function () {},
          "global": {
            "load": {}
          },
          "guid": {},
          "handle": function () {},
          "props": {},
          "proxy": function () {},
          "remove": function () {},
          "special": {
            "beforeunload": {
              "setup": function () {},
              "teardown": function () {}
            },
            "focusin": {
              "setup": function () {},
              "teardown": function () {}
            },
            "focusout": {
              "setup": function () {},
              "teardown": function () {}
            },
            "live": {
              "add": function () {},
              "remove": function () {}
            },
            "mouseenter": {
              "setup": function () {},
              "teardown": function () {}
            },
            "mouseleave": {
              "setup": function () {},
              "teardown": function () {}
            },
            "ready": {
              "setup": function () {},
              "teardown": function () {}
            }
          },
          "trigger": function () {},
          "triggered": {}
        },
        "expando": {},
        "expr": {
          ":": {
            "animated": function () {},
            "button": function () {},
            "checkbox": function () {},
            "checked": function () {},
            "disabled": function () {},
            "empty": function () {},
            "enabled": function () {},
            "file": function () {},
            "focus": function () {},
            "has": function () {},
            "header": function () {},
            "hidden": function () {},
            "image": function () {},
            "input": function () {},
            "parent": function () {},
            "password": function () {},
            "radio": function () {},
            "reset": function () {},
            "selected": function () {},
            "submit": function () {},
            "text": function () {},
            "visible": function () {}
          },
          "attrHandle": {
            "href": function () {},
            "type": function () {}
          },
          "attrMap": {
            "class": {},
            "for": {}
          },
          "filter": {
            "ATTR": function () {},
            "CHILD": function () {},
            "CLASS": function () {},
            "ID": function () {},
            "POS": function () {},
            "PSEUDO": function () {},
            "TAG": function () {}
          },
          "filters": {
            "animated": function () {},
            "button": function () {},
            "checkbox": function () {},
            "checked": function () {},
            "disabled": function () {},
            "empty": function () {},
            "enabled": function () {},
            "file": function () {},
            "focus": function () {},
            "has": function () {},
            "header": function () {},
            "hidden": function () {},
            "image": function () {},
            "input": function () {},
            "parent": function () {},
            "password": function () {},
            "radio": function () {},
            "reset": function () {},
            "selected": function () {},
            "submit": function () {},
            "text": function () {},
            "visible": function () {}
          },
          "find": {
            "CLASS": function () {},
            "ID": function () {},
            "NAME": function () {},
            "TAG": function () {}
          },
          "leftMatch": {
            "ATTR": {},
            "CHILD": {},
            "CLASS": {},
            "ID": {},
            "NAME": {},
            "POS": {},
            "PSEUDO": {},
            "TAG": {}
          },
          "match": {
            "ATTR": {},
            "CHILD": {},
            "CLASS": {},
            "ID": {},
            "NAME": {},
            "POS": {},
            "PSEUDO": {},
            "TAG": {}
          },
          "order": {},
          "preFilter": {
            "ATTR": function () {},
            "CHILD": function () {},
            "CLASS": function () {},
            "ID": function () {},
            "POS": function () {},
            "PSEUDO": function () {},
            "TAG": function () {}
          },
          "relative": {
            "": function () {},
            "+": function () {},
            ">": function () {},
            "~": function () {}
          },
          "setFilters": {
            "eq": function () {},
            "even": function () {},
            "first": function () {},
            "gt": function () {},
            "last": function () {},
            "lt": function () {},
            "nth": function () {},
            "odd": function () {}
          }
        },
        "extend": function () {},
        "filter": function () {},
        "find": {
          "contains": function () {},
          "error": function () {},
          "filter": function () {},
          "find": function () {},
          "getText": function () {},
          "isXML": function () {},
          "matches": function () {},
          "matchesSelector": function () {},
          "selectors": {
            ":": {
              "animated": function () {},
              "button": function () {},
              "checkbox": function () {},
              "checked": function () {},
              "disabled": function () {},
              "empty": function () {},
              "enabled": function () {},
              "file": function () {},
              "focus": function () {},
              "has": function () {},
              "header": function () {},
              "hidden": function () {},
              "image": function () {},
              "input": function () {},
              "parent": function () {},
              "password": function () {},
              "radio": function () {},
              "reset": function () {},
              "selected": function () {},
              "submit": function () {},
              "text": function () {},
              "visible": function () {}
            },
            "attrHandle": {
              "href": function () {},
              "type": function () {}
            },
            "attrMap": {
              "class": {},
              "for": {}
            },
            "filter": {
              "ATTR": function () {},
              "CHILD": function () {},
              "CLASS": function () {},
              "ID": function () {},
              "POS": function () {},
              "PSEUDO": function () {},
              "TAG": function () {}
            },
            "filters": {
              "animated": function () {},
              "button": function () {},
              "checkbox": function () {},
              "checked": function () {},
              "disabled": function () {},
              "empty": function () {},
              "enabled": function () {},
              "file": function () {},
              "focus": function () {},
              "has": function () {},
              "header": function () {},
              "hidden": function () {},
              "image": function () {},
              "input": function () {},
              "parent": function () {},
              "password": function () {},
              "radio": function () {},
              "reset": function () {},
              "selected": function () {},
              "submit": function () {},
              "text": function () {},
              "visible": function () {}
            },
            "find": {
              "CLASS": function () {},
              "ID": function () {},
              "NAME": function () {},
              "TAG": function () {}
            },
            "leftMatch": {
              "ATTR": {},
              "CHILD": {},
              "CLASS": {},
              "ID": {},
              "NAME": {},
              "POS": {},
              "PSEUDO": {},
              "TAG": {}
            },
            "match": {
              "ATTR": {},
              "CHILD": {},
              "CLASS": {},
              "ID": {},
              "NAME": {},
              "POS": {},
              "PSEUDO": {},
              "TAG": {}
            },
            "order": {},
            "preFilter": {
              "ATTR": function () {},
              "CHILD": function () {},
              "CLASS": function () {},
              "ID": function () {},
              "POS": function () {},
              "PSEUDO": function () {},
              "TAG": function () {}
            },
            "relative": {
              "": function () {},
              "+": function () {},
              ">": function () {},
              "~": function () {}
            },
            "setFilters": {
              "eq": function () {},
              "even": function () {},
              "first": function () {},
              "gt": function () {},
              "last": function () {},
              "lt": function () {},
              "nth": function () {},
              "odd": function () {}
            }
          },
          "uniqueSort": function () {}
        },
        "fn": {},
        "fragments": {},
        "fx": {
          "interval": {},
          "speeds": {
            "_default": {},
            "fast": {},
            "slow": {}
          },
          "step": {
            "_default": function () {},
            "opacity": function () {}
          },
          "stop": function () {},
          "tick": function () {}
        },
        "get": function () {},
        "getJSON": function () {},
        "getScript": function () {},
        "globalEval": function () {},
        "grep": function () {},
        "guid": {},
        "hasData": function () {},
        "holdReady": function () {},
        "hubConnection": {
          "fn": {
            "_": {
              "beatHandle": {},
              "beatInterval": {},
              "connectingMessageBuffer": {
                "clear": function () {},
                "drain": function () {},
                "tryBuffer": function () {}
              },
              "keepAliveData": {},
              "lastActiveAt": {},
              "lastMessageAt": {},
              "totalTransportConnectTimeout": {}
            },
            "_maximizeClientHubInvocation": function () {},
            "_originalJson": {},
            "_parseResponse": function () {},
            "_registerSubscribedHubs": function () {},
            "ajaxDataType": {},
            "clientProtocol": {},
            "connectionSlow": function () {},
            "contentType": {},
            "createHubProxy": function () {},
            "disconnectTimeout": {},
            "disconnected": function () {},
            "error": function () {},
            "init": function () {},
            "isCrossDomain": function () {},
            "json": {},
            "keepAliveWarnAt": {},
            "lastError": {},
            "log": function () {},
            "logging": {},
            "qs": {},
            "received": function () {},
            "reconnectDelay": {},
            "reconnectWindow": {},
            "reconnected": function () {},
            "reconnecting": function () {},
            "send": function () {},
            "start": function () {},
            "starting": function () {},
            "state": {},
            "stateChanged": function () {},
            "stop": function () {},
            "transportConnectTimeout": {},
            "url": {}
          }
        },
        "inArray": function () {},
        "isArray": function () {},
        "isEmptyObject": function () {},
        "isFunction": function () {},
        "isNaN": function () {},
        "isPlainObject": function () {},
        "isReady": {},
        "isWindow": function () {},
        "isXMLDoc": function () {},
        "lastModified": {},
        "makeArray": function () {},
        "map": function () {},
        "merge": function () {},
        "noConflict": function () {},
        "noData": {
          "applet": {},
          "embed": {},
          "object": {}
        },
        "nodeName": function () {},
        "noop": function () {},
        "now": function () {},
        "nth": function () {},
        "offset": {
          "bodyOffset": function () {},
          "initialize": function () {},
          "setOffset": function () {}
        },
        "param": function () {},
        "parseJSON": function () {},
        "parseXML": function () {},
        "post": function () {},
        "prop": function () {},
        "propFix": {
          "cellpadding": {},
          "cellspacing": {},
          "class": {},
          "colspan": {},
          "contenteditable": {},
          "for": {},
          "frameborder": {},
          "maxlength": {},
          "readonly": {},
          "rowspan": {},
          "tabindex": {},
          "usemap": {}
        },
        "propHooks": {
          "tabIndex": {
            "get": function () {}
          }
        },
        "proxy": function () {},
        "queue": function () {},
        "ready": function () {},
        "readyWait": {},
        "removeAttr": function () {},
        "removeData": function () {},
        "removeEvent": function () {},
        "sibling": function () {},
        "signalR": {
          "_": {
            "configurePingInterval": function () {},
            "defaultContentType": {},
            "error": function () {},
            "firefoxMajorVersion": function () {},
            "format": function () {},
            "ieVersion": {},
            "transportError": function () {}
          },
          "ajaxDefaults": {
            "async": {},
            "cache": {},
            "global": {},
            "processData": {},
            "timeout": {}
          },
          "changeState": function () {},
          "connectionState": {
            "connected": {},
            "connecting": {},
            "disconnected": {},
            "reconnecting": {}
          },
          "events": {
            "onConnectionSlow": {},
            "onDisconnect": {},
            "onError": {},
            "onReceived": {},
            "onReconnect": {},
            "onReconnecting": {},
            "onStart": {},
            "onStarting": {},
            "onStateChanged": {}
          },
          "fn": {
            "_originalJson": {},
            "_parseResponse": function () {},
            "ajaxDataType": {},
            "clientProtocol": {},
            "connectionSlow": function () {},
            "contentType": {},
            "disconnectTimeout": {},
            "disconnected": function () {},
            "error": function () {},
            "init": function () {},
            "isCrossDomain": function () {},
            "json": {},
            "keepAliveWarnAt": {},
            "log": function () {},
            "logging": {},
            "received": function () {},
            "reconnectDelay": {},
            "reconnectWindow": {},
            "reconnected": function () {},
            "reconnecting": function () {},
            "send": function () {},
            "start": function () {},
            "starting": function () {},
            "state": {},
            "stateChanged": function () {},
            "stop": function () {},
            "transportConnectTimeout": {}
          },
          "hub": {
            "start": function () {}
          },
          "isDisconnecting": function () {},
          "noConflict": function () {},
          "resources": {
            "errorDuringStartRequest": {},
            "errorOnNegotiate": {},
            "errorParsingNegotiateResponse": {},
            "errorParsingStartResponse": {},
            "eventSourceError": {},
            "eventSourceFailedToConnect": {},
            "invalidStartResponse": {},
            "longPollFailed": {},
            "noConnectionTransport": {},
            "noTransportOnInit": {},
            "nojQuery": {},
            "parseFailed": {},
            "pingServerFailed": {},
            "pingServerFailedInvalidResponse": {},
            "pingServerFailedParse": {},
            "pingServerFailedStatusCode": {},
            "protocolIncompatible": {},
            "reconnectTimeout": {},
            "reconnectWindowTimeout": {},
            "sendFailed": {},
            "stoppedDuringStartRequest": {},
            "stoppedWhileLoading": {},
            "stoppedWhileNegotiating": {},
            "webSocketClosed": {},
            "webSocketsInvalidState": {}
          },
          "transports": {
            "_logic": {
              "addQs": function () {},
              "ajax": function () {},
              "ajaxAbort": function () {},
              "ajaxSend": function () {},
              "ajaxStart": function () {},
              "clearReconnectTimeout": function () {},
              "ensureReconnectingState": function () {},
              "foreverFrame": {
                "connections": {},
                "count": {}
              },
              "getUrl": function () {},
              "handleParseFailure": function () {},
              "initHandler": function () {},
              "isConnectedOrReconnecting": function () {},
              "markActive": function () {},
              "markLastMessage": function () {},
              "maximizePersistentResponse": function () {},
              "monitorKeepAlive": function () {},
              "pingServer": function () {},
              "prepareQueryString": function () {},
              "processMessages": function () {},
              "reconnect": function () {},
              "startHeartbeat": function () {},
              "stopMonitoringKeepAlive": function () {},
              "stringifySend": function () {},
              "triggerReceived": function () {},
              "tryAbortStartRequest": function () {},
              "tryInitialize": function () {},
              "updateGroups": function () {},
              "verifyLastActive": function () {}
            },
            "foreverFrame": {
              "abort": function () {},
              "getConnection": function () {},
              "iframeClearThreshold": {},
              "lostConnection": function () {},
              "name": {},
              "receive": function () {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "started": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            },
            "longPolling": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnectDelay": {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            },
            "serverSentEvents": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {},
              "timeOut": {}
            },
            "webSockets": {
              "abort": function () {},
              "lostConnection": function () {},
              "name": {},
              "reconnect": function () {},
              "send": function () {},
              "start": function () {},
              "stop": function () {},
              "supportsKeepAlive": function () {}
            }
          },
          "version": {}
        },
        "speed": function () {},
        "style": function () {},
        "sub": function () {},
        "support": {
          "ajax": {},
          "appendChecked": {},
          "boxModel": {},
          "changeBubbles": {},
          "checkClone": {},
          "checkOn": {},
          "cors": {},
          "cssFloat": {},
          "deleteExpando": {},
          "focusinBubbles": {},
          "getSetAttribute": {},
          "hrefNormalized": {},
          "htmlSerialize": {},
          "inlineBlockNeedsLayout": {},
          "leadingWhitespace": {},
          "noCloneChecked": {},
          "noCloneEvent": {},
          "opacity": {},
          "optDisabled": {},
          "optSelected": {},
          "radioValue": {},
          "reliableHiddenOffsets": {},
          "reliableMarginRight": {},
          "shrinkWrapBlocks": {},
          "style": {},
          "submitBubbles": {},
          "tbody": {}
        },
        "swap": function () {},
        "text": function () {},
        "timers": {},
        "trim": function () {},
        "type": function () {},
        "uaMatch": function () {},
        "unique": function () {},
        "uuid": {},
        "valHooks": {
          "checkbox": {
            "set": function () {}
          },
          "option": {
            "get": function () {}
          },
          "radio": {
            "set": function () {}
          },
          "select": {
            "get": function () {},
            "set": function () {}
          }
        },
        "when": function () {}
      },
      "contents": function () {},
      "css": function () {},
      "data": function () {},
      "dblclick": function () {},
      "delay": function () {},
      "delegate": function () {},
      "dequeue": function () {},
      "detach": function () {},
      "die": function () {},
      "domManip": function () {},
      "each": function () {},
      "empty": function () {},
      "end": function () {},
      "eq": function () {},
      "error": function () {},
      "extend": function () {},
      "fadeIn": function () {},
      "fadeOut": function () {},
      "fadeTo": function () {},
      "fadeToggle": function () {},
      "filter": function () {},
      "find": function () {},
      "first": function () {},
      "focus": function () {},
      "focusin": function () {},
      "focusout": function () {},
      "get": function () {},
      "has": function () {},
      "hasClass": function () {},
      "height": function () {},
      "hide": function () {},
      "hover": function () {},
      "html": function () {},
      "index": function () {},
      "init": function () {},
      "innerHeight": function () {},
      "innerWidth": function () {},
      "insertAfter": function () {},
      "insertBefore": function () {},
      "is": function () {},
      "jquery": {},
      "keydown": function () {},
      "keypress": function () {},
      "keyup": function () {},
      "last": function () {},
      "length": {},
      "live": function () {},
      "load": function () {},
      "map": function () {},
      "mousedown": function () {},
      "mouseenter": function () {},
      "mouseleave": function () {},
      "mousemove": function () {},
      "mouseout": function () {},
      "mouseover": function () {},
      "mouseup": function () {},
      "next": function () {},
      "nextAll": function () {},
      "nextUntil": function () {},
      "not": function () {},
      "offset": function () {},
      "offsetParent": function () {},
      "one": function () {},
      "outerHeight": function () {},
      "outerWidth": function () {},
      "parent": function () {},
      "parents": function () {},
      "parentsUntil": function () {},
      "position": function () {},
      "prepend": function () {},
      "prependTo": function () {},
      "prev": function () {},
      "prevAll": function () {},
      "prevUntil": function () {},
      "promise": function () {},
      "prop": function () {},
      "push": function () {},
      "pushStack": function () {},
      "queue": function () {},
      "ready": function () {},
      "remove": function () {},
      "removeAttr": function () {},
      "removeClass": function () {},
      "removeData": function () {},
      "removeProp": function () {},
      "replaceAll": function () {},
      "replaceWith": function () {},
      "resize": function () {},
      "scroll": function () {},
      "scrollLeft": function () {},
      "scrollTop": function () {},
      "select": function () {},
      "selector": {},
      "serialize": function () {},
      "serializeArray": function () {},
      "show": function () {},
      "siblings": function () {},
      "size": function () {},
      "slice": function () {},
      "slideDown": function () {},
      "slideToggle": function () {},
      "slideUp": function () {},
      "sort": function () {},
      "splice": function () {},
      "stop": function () {},
      "submit": function () {},
      "text": function () {},
      "toArray": function () {},
      "toggle": function () {},
      "toggleClass": function () {},
      "trigger": function () {},
      "triggerHandler": function () {},
      "unbind": function () {},
      "undelegate": function () {},
      "unload": function () {},
      "unwrap": function () {},
      "val": function () {},
      "width": function () {},
      "wrap": function () {},
      "wrapAll": function () {},
      "wrapInner": function () {}
    },
    "fragments": {},
    "fx": {
      "interval": {},
      "speeds": {
        "_default": {},
        "fast": {},
        "slow": {}
      },
      "step": {
        "_default": function () {},
        "opacity": function () {}
      },
      "stop": function () {},
      "tick": function () {}
    },
    "get": function () {},
    "getJSON": function () {},
    "getScript": function () {},
    "globalEval": function () {},
    "grep": function () {},
    "guid": {},
    "hasData": function () {},
    "holdReady": function () {},
    "hubConnection": {
      "fn": {
        "_": {
          "beatHandle": {},
          "beatInterval": {},
          "connectingMessageBuffer": {
            "clear": function () {},
            "drain": function () {},
            "tryBuffer": function () {}
          },
          "keepAliveData": {},
          "lastActiveAt": {},
          "lastMessageAt": {},
          "totalTransportConnectTimeout": {}
        },
        "_maximizeClientHubInvocation": function () {},
        "_originalJson": {},
        "_parseResponse": function () {},
        "_registerSubscribedHubs": function () {},
        "ajaxDataType": {},
        "clientProtocol": {},
        "connectionSlow": function () {},
        "contentType": {},
        "createHubProxy": function () {},
        "disconnectTimeout": {},
        "disconnected": function () {},
        "error": function () {},
        "init": function () {},
        "isCrossDomain": function () {},
        "json": {},
        "keepAliveWarnAt": {},
        "lastError": {},
        "log": function () {},
        "logging": {},
        "qs": {},
        "received": function () {},
        "reconnectDelay": {},
        "reconnectWindow": {},
        "reconnected": function () {},
        "reconnecting": function () {},
        "send": function () {},
        "start": function () {},
        "starting": function () {},
        "state": {},
        "stateChanged": function () {},
        "stop": function () {},
        "transportConnectTimeout": {},
        "url": {}
      }
    },
    "inArray": function () {},
    "isArray": function () {},
    "isEmptyObject": function () {},
    "isFunction": function () {},
    "isNaN": function () {},
    "isPlainObject": function () {},
    "isReady": {},
    "isWindow": function () {},
    "isXMLDoc": function () {},
    "lastModified": {},
    "makeArray": function () {},
    "map": function () {},
    "merge": function () {},
    "noConflict": function () {},
    "noData": {
      "applet": {},
      "embed": {},
      "object": {}
    },
    "nodeName": function () {},
    "noop": function () {},
    "now": function () {},
    "nth": function () {},
    "offset": {
      "bodyOffset": function () {},
      "initialize": function () {},
      "setOffset": function () {}
    },
    "param": function () {},
    "parseJSON": function () {},
    "parseXML": function () {},
    "post": function () {},
    "prop": function () {},
    "propFix": {
      "cellpadding": {},
      "cellspacing": {},
      "class": {},
      "colspan": {},
      "contenteditable": {},
      "for": {},
      "frameborder": {},
      "maxlength": {},
      "readonly": {},
      "rowspan": {},
      "tabindex": {},
      "usemap": {}
    },
    "propHooks": {
      "tabIndex": {
        "get": function () {}
      }
    },
    "proxy": function () {},
    "queue": function () {},
    "ready": function () {},
    "readyWait": {},
    "removeAttr": function () {},
    "removeData": function () {},
    "removeEvent": function () {},
    "sibling": function () {},
    "signalR": {
      "_": {
        "configurePingInterval": function () {},
        "defaultContentType": {},
        "error": function () {},
        "firefoxMajorVersion": function () {},
        "format": function () {},
        "ieVersion": {},
        "transportError": function () {}
      },
      "ajaxDefaults": {
        "async": {},
        "cache": {},
        "global": {},
        "processData": {},
        "timeout": {}
      },
      "changeState": function () {},
      "connectionState": {
        "connected": {},
        "connecting": {},
        "disconnected": {},
        "reconnecting": {}
      },
      "events": {
        "onConnectionSlow": {},
        "onDisconnect": {},
        "onError": {},
        "onReceived": {},
        "onReconnect": {},
        "onReconnecting": {},
        "onStart": {},
        "onStarting": {},
        "onStateChanged": {}
      },
      "fn": {
        "_originalJson": {},
        "_parseResponse": function () {},
        "ajaxDataType": {},
        "clientProtocol": {},
        "connectionSlow": function () {},
        "contentType": {},
        "disconnectTimeout": {},
        "disconnected": function () {},
        "error": function () {},
        "init": function () {},
        "isCrossDomain": function () {},
        "json": {},
        "keepAliveWarnAt": {},
        "log": function () {},
        "logging": {},
        "received": function () {},
        "reconnectDelay": {},
        "reconnectWindow": {},
        "reconnected": function () {},
        "reconnecting": function () {},
        "send": function () {},
        "start": function () {},
        "starting": function () {},
        "state": {},
        "stateChanged": function () {},
        "stop": function () {},
        "transportConnectTimeout": {}
      },
      "hub": {
        "start": function () {}
      },
      "isDisconnecting": function () {},
      "noConflict": function () {},
      "resources": {
        "errorDuringStartRequest": {},
        "errorOnNegotiate": {},
        "errorParsingNegotiateResponse": {},
        "errorParsingStartResponse": {},
        "eventSourceError": {},
        "eventSourceFailedToConnect": {},
        "invalidStartResponse": {},
        "longPollFailed": {},
        "noConnectionTransport": {},
        "noTransportOnInit": {},
        "nojQuery": {},
        "parseFailed": {},
        "pingServerFailed": {},
        "pingServerFailedInvalidResponse": {},
        "pingServerFailedParse": {},
        "pingServerFailedStatusCode": {},
        "protocolIncompatible": {},
        "reconnectTimeout": {},
        "reconnectWindowTimeout": {},
        "sendFailed": {},
        "stoppedDuringStartRequest": {},
        "stoppedWhileLoading": {},
        "stoppedWhileNegotiating": {},
        "webSocketClosed": {},
        "webSocketsInvalidState": {}
      },
      "transports": {
        "_logic": {
          "addQs": function () {},
          "ajax": function () {},
          "ajaxAbort": function () {},
          "ajaxSend": function () {},
          "ajaxStart": function () {},
          "clearReconnectTimeout": function () {},
          "ensureReconnectingState": function () {},
          "foreverFrame": {
            "connections": {},
            "count": {}
          },
          "getUrl": function () {},
          "handleParseFailure": function () {},
          "initHandler": function () {},
          "isConnectedOrReconnecting": function () {},
          "markActive": function () {},
          "markLastMessage": function () {},
          "maximizePersistentResponse": function () {},
          "monitorKeepAlive": function () {},
          "pingServer": function () {},
          "prepareQueryString": function () {},
          "processMessages": function () {},
          "reconnect": function () {},
          "startHeartbeat": function () {},
          "stopMonitoringKeepAlive": function () {},
          "stringifySend": function () {},
          "triggerReceived": function () {},
          "tryAbortStartRequest": function () {},
          "tryInitialize": function () {},
          "updateGroups": function () {},
          "verifyLastActive": function () {}
        },
        "foreverFrame": {
          "abort": function () {},
          "getConnection": function () {},
          "iframeClearThreshold": {},
          "lostConnection": function () {},
          "name": {},
          "receive": function () {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "started": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        },
        "longPolling": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnectDelay": {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        },
        "serverSentEvents": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {},
          "timeOut": {}
        },
        "webSockets": {
          "abort": function () {},
          "lostConnection": function () {},
          "name": {},
          "reconnect": function () {},
          "send": function () {},
          "start": function () {},
          "stop": function () {},
          "supportsKeepAlive": function () {}
        }
      },
      "version": {}
    },
    "speed": function () {},
    "style": function () {},
    "sub": function () {},
    "support": {
      "ajax": {},
      "appendChecked": {},
      "boxModel": {},
      "changeBubbles": {},
      "checkClone": {},
      "checkOn": {},
      "cors": {},
      "cssFloat": {},
      "deleteExpando": {},
      "focusinBubbles": {},
      "getSetAttribute": {},
      "hrefNormalized": {},
      "htmlSerialize": {},
      "inlineBlockNeedsLayout": {},
      "leadingWhitespace": {},
      "noCloneChecked": {},
      "noCloneEvent": {},
      "opacity": {},
      "optDisabled": {},
      "optSelected": {},
      "radioValue": {},
      "reliableHiddenOffsets": {},
      "reliableMarginRight": {},
      "shrinkWrapBlocks": {},
      "style": {},
      "submitBubbles": {},
      "tbody": {}
    },
    "swap": function () {},
    "text": function () {},
    "timers": {},
    "trim": function () {},
    "type": function () {},
    "uaMatch": function () {},
    "unique": function () {},
    "uuid": {},
    "valHooks": {
      "checkbox": {
        "set": function () {}
      },
      "option": {
        "get": function () {}
      },
      "radio": {
        "set": function () {}
      },
      "select": {
        "get": function () {},
        "set": function () {}
      }
    },
    "when": function () {}
  };
  jQuery.prototype = {
    "_toggle": function () {},
    "add": function () {},
    "addClass": function () {},
    "after": function () {},
    "ajaxComplete": function () {},
    "ajaxError": function () {},
    "ajaxSend": function () {},
    "ajaxStart": function () {},
    "ajaxStop": function () {},
    "ajaxSuccess": function () {},
    "andSelf": function () {},
    "animate": function () {},
    "append": function () {},
    "appendTo": function () {},
    "attr": function () {},
    "before": function () {},
    "bind": function () {},
    "blur": function () {},
    "change": function () {},
    "children": function () {},
    "clearQueue": function () {},
    "click": function () {},
    "clone": function () {},
    "closest": function () {},
    "constructor": function () {},
    "contents": function () {},
    "css": function () {},
    "data": function () {},
    "dblclick": function () {},
    "delay": function () {},
    "delegate": function () {},
    "dequeue": function () {},
    "detach": function () {},
    "die": function () {},
    "domManip": function () {},
    "each": function () {},
    "empty": function () {},
    "end": function () {},
    "eq": function () {},
    "error": function () {},
    "extend": function () {},
    "fadeIn": function () {},
    "fadeOut": function () {},
    "fadeTo": function () {},
    "fadeToggle": function () {},
    "filter": function () {},
    "find": function () {},
    "first": function () {},
    "focus": function () {},
    "focusin": function () {},
    "focusout": function () {},
    "get": function () {},
    "has": function () {},
    "hasClass": function () {},
    "height": function () {},
    "hide": function () {},
    "hover": function () {},
    "html": function () {},
    "index": function () {},
    "init": function () {},
    "innerHeight": function () {},
    "innerWidth": function () {},
    "insertAfter": function () {},
    "insertBefore": function () {},
    "is": function () {},
    "jquery": function () {},
    "keydown": function () {},
    "keypress": function () {},
    "keyup": function () {},
    "last": function () {},
    "length": function () {},
    "live": function () {},
    "load": function () {},
    "map": function () {},
    "mousedown": function () {},
    "mouseenter": function () {},
    "mouseleave": function () {},
    "mousemove": function () {},
    "mouseout": function () {},
    "mouseover": function () {},
    "mouseup": function () {},
    "next": function () {},
    "nextAll": function () {},
    "nextUntil": function () {},
    "not": function () {},
    "offset": function () {},
    "offsetParent": function () {},
    "one": function () {},
    "outerHeight": function () {},
    "outerWidth": function () {},
    "parent": function () {},
    "parents": function () {},
    "parentsUntil": function () {},
    "position": function () {},
    "prepend": function () {},
    "prependTo": function () {},
    "prev": function () {},
    "prevAll": function () {},
    "prevUntil": function () {},
    "promise": function () {},
    "prop": function () {},
    "push": function () {},
    "pushStack": function () {},
    "queue": function () {},
    "ready": function () {},
    "remove": function () {},
    "removeAttr": function () {},
    "removeClass": function () {},
    "removeData": function () {},
    "removeProp": function () {},
    "replaceAll": function () {},
    "replaceWith": function () {},
    "resize": function () {},
    "scroll": function () {},
    "scrollLeft": function () {},
    "scrollTop": function () {},
    "select": function () {},
    "selector": function () {},
    "serialize": function () {},
    "serializeArray": function () {},
    "show": function () {},
    "siblings": function () {},
    "size": function () {},
    "slice": function () {},
    "slideDown": function () {},
    "slideToggle": function () {},
    "slideUp": function () {},
    "sort": function () {},
    "splice": function () {},
    "stop": function () {},
    "submit": function () {},
    "text": function () {},
    "toArray": function () {},
    "toggle": function () {},
    "toggleClass": function () {},
    "trigger": function () {},
    "triggerHandler": function () {},
    "unbind": function () {},
    "undelegate": function () {},
    "unload": function () {},
    "unwrap": function () {},
    "val": function () {},
    "width": function () {},
    "wrap": function () {},
    "wrapAll": function () {},
    "wrapInner": function () {}
  };
  jQuery.Event.prototype = {
    "isDefaultPrevented": function () {},
    "isImmediatePropagationStopped": function () {},
    "isPropagationStopped": function () {},
    "preventDefault": function () {},
    "stopImmediatePropagation": function () {},
    "stopPropagation": function () {}
  };
  jQuery.connection.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.connection.fn.init.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.fn.constructor.prototype = {
    "_toggle": function () {},
    "add": function () {},
    "addClass": function () {},
    "after": function () {},
    "ajaxComplete": function () {},
    "ajaxError": function () {},
    "ajaxSend": function () {},
    "ajaxStart": function () {},
    "ajaxStop": function () {},
    "ajaxSuccess": function () {},
    "andSelf": function () {},
    "animate": function () {},
    "append": function () {},
    "appendTo": function () {},
    "attr": function () {},
    "before": function () {},
    "bind": function () {},
    "blur": function () {},
    "change": function () {},
    "children": function () {},
    "clearQueue": function () {},
    "click": function () {},
    "clone": function () {},
    "closest": function () {},
    "constructor": function () {},
    "contents": function () {},
    "css": function () {},
    "data": function () {},
    "dblclick": function () {},
    "delay": function () {},
    "delegate": function () {},
    "dequeue": function () {},
    "detach": function () {},
    "die": function () {},
    "domManip": function () {},
    "each": function () {},
    "empty": function () {},
    "end": function () {},
    "eq": function () {},
    "error": function () {},
    "extend": function () {},
    "fadeIn": function () {},
    "fadeOut": function () {},
    "fadeTo": function () {},
    "fadeToggle": function () {},
    "filter": function () {},
    "find": function () {},
    "first": function () {},
    "focus": function () {},
    "focusin": function () {},
    "focusout": function () {},
    "get": function () {},
    "has": function () {},
    "hasClass": function () {},
    "height": function () {},
    "hide": function () {},
    "hover": function () {},
    "html": function () {},
    "index": function () {},
    "init": function () {},
    "innerHeight": function () {},
    "innerWidth": function () {},
    "insertAfter": function () {},
    "insertBefore": function () {},
    "is": function () {},
    "jquery": function () {},
    "keydown": function () {},
    "keypress": function () {},
    "keyup": function () {},
    "last": function () {},
    "length": function () {},
    "live": function () {},
    "load": function () {},
    "map": function () {},
    "mousedown": function () {},
    "mouseenter": function () {},
    "mouseleave": function () {},
    "mousemove": function () {},
    "mouseout": function () {},
    "mouseover": function () {},
    "mouseup": function () {},
    "next": function () {},
    "nextAll": function () {},
    "nextUntil": function () {},
    "not": function () {},
    "offset": function () {},
    "offsetParent": function () {},
    "one": function () {},
    "outerHeight": function () {},
    "outerWidth": function () {},
    "parent": function () {},
    "parents": function () {},
    "parentsUntil": function () {},
    "position": function () {},
    "prepend": function () {},
    "prependTo": function () {},
    "prev": function () {},
    "prevAll": function () {},
    "prevUntil": function () {},
    "promise": function () {},
    "prop": function () {},
    "push": function () {},
    "pushStack": function () {},
    "queue": function () {},
    "ready": function () {},
    "remove": function () {},
    "removeAttr": function () {},
    "removeClass": function () {},
    "removeData": function () {},
    "removeProp": function () {},
    "replaceAll": function () {},
    "replaceWith": function () {},
    "resize": function () {},
    "scroll": function () {},
    "scrollLeft": function () {},
    "scrollTop": function () {},
    "select": function () {},
    "selector": function () {},
    "serialize": function () {},
    "serializeArray": function () {},
    "show": function () {},
    "siblings": function () {},
    "size": function () {},
    "slice": function () {},
    "slideDown": function () {},
    "slideToggle": function () {},
    "slideUp": function () {},
    "sort": function () {},
    "splice": function () {},
    "stop": function () {},
    "submit": function () {},
    "text": function () {},
    "toArray": function () {},
    "toggle": function () {},
    "toggleClass": function () {},
    "trigger": function () {},
    "triggerHandler": function () {},
    "unbind": function () {},
    "undelegate": function () {},
    "unload": function () {},
    "unwrap": function () {},
    "val": function () {},
    "width": function () {},
    "wrap": function () {},
    "wrapAll": function () {},
    "wrapInner": function () {}
  };
  jQuery.fn.constructor.Event.prototype = {
    "isDefaultPrevented": function () {},
    "isImmediatePropagationStopped": function () {},
    "isPropagationStopped": function () {},
    "preventDefault": function () {},
    "stopImmediatePropagation": function () {},
    "stopPropagation": function () {}
  };
  jQuery.fn.constructor.connection.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.fn.constructor.connection.fn.init.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.fn.constructor.fx.prototype = {
    "cur": function () {},
    "custom": function () {},
    "hide": function () {},
    "show": function () {},
    "step": function () {},
    "update": function () {}
  };
  jQuery.fn.constructor.hubConnection.prototype = {
    "_": function () {},
    "_maximizeClientHubInvocation": function () {},
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "_registerSubscribedHubs": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "createHubProxy": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "lastError": function () {},
    "log": function () {},
    "logging": function () {},
    "qs": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {},
    "url": function () {}
  };
  jQuery.fn.constructor.hubConnection.fn.init.prototype = {
    "_": function () {},
    "_maximizeClientHubInvocation": function () {},
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "_registerSubscribedHubs": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "createHubProxy": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "lastError": function () {},
    "log": function () {},
    "logging": function () {},
    "qs": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {},
    "url": function () {}
  };
  jQuery.fn.constructor.signalR.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.fn.constructor.signalR.fn.init.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.fn.init.prototype = {
    "_toggle": function () {},
    "add": function () {},
    "addClass": function () {},
    "after": function () {},
    "ajaxComplete": function () {},
    "ajaxError": function () {},
    "ajaxSend": function () {},
    "ajaxStart": function () {},
    "ajaxStop": function () {},
    "ajaxSuccess": function () {},
    "andSelf": function () {},
    "animate": function () {},
    "append": function () {},
    "appendTo": function () {},
    "attr": function () {},
    "before": function () {},
    "bind": function () {},
    "blur": function () {},
    "change": function () {},
    "children": function () {},
    "clearQueue": function () {},
    "click": function () {},
    "clone": function () {},
    "closest": function () {},
    "constructor": function () {},
    "contents": function () {},
    "css": function () {},
    "data": function () {},
    "dblclick": function () {},
    "delay": function () {},
    "delegate": function () {},
    "dequeue": function () {},
    "detach": function () {},
    "die": function () {},
    "domManip": function () {},
    "each": function () {},
    "empty": function () {},
    "end": function () {},
    "eq": function () {},
    "error": function () {},
    "extend": function () {},
    "fadeIn": function () {},
    "fadeOut": function () {},
    "fadeTo": function () {},
    "fadeToggle": function () {},
    "filter": function () {},
    "find": function () {},
    "first": function () {},
    "focus": function () {},
    "focusin": function () {},
    "focusout": function () {},
    "get": function () {},
    "has": function () {},
    "hasClass": function () {},
    "height": function () {},
    "hide": function () {},
    "hover": function () {},
    "html": function () {},
    "index": function () {},
    "init": function () {},
    "innerHeight": function () {},
    "innerWidth": function () {},
    "insertAfter": function () {},
    "insertBefore": function () {},
    "is": function () {},
    "jquery": function () {},
    "keydown": function () {},
    "keypress": function () {},
    "keyup": function () {},
    "last": function () {},
    "length": function () {},
    "live": function () {},
    "load": function () {},
    "map": function () {},
    "mousedown": function () {},
    "mouseenter": function () {},
    "mouseleave": function () {},
    "mousemove": function () {},
    "mouseout": function () {},
    "mouseover": function () {},
    "mouseup": function () {},
    "next": function () {},
    "nextAll": function () {},
    "nextUntil": function () {},
    "not": function () {},
    "offset": function () {},
    "offsetParent": function () {},
    "one": function () {},
    "outerHeight": function () {},
    "outerWidth": function () {},
    "parent": function () {},
    "parents": function () {},
    "parentsUntil": function () {},
    "position": function () {},
    "prepend": function () {},
    "prependTo": function () {},
    "prev": function () {},
    "prevAll": function () {},
    "prevUntil": function () {},
    "promise": function () {},
    "prop": function () {},
    "push": function () {},
    "pushStack": function () {},
    "queue": function () {},
    "ready": function () {},
    "remove": function () {},
    "removeAttr": function () {},
    "removeClass": function () {},
    "removeData": function () {},
    "removeProp": function () {},
    "replaceAll": function () {},
    "replaceWith": function () {},
    "resize": function () {},
    "scroll": function () {},
    "scrollLeft": function () {},
    "scrollTop": function () {},
    "select": function () {},
    "selector": function () {},
    "serialize": function () {},
    "serializeArray": function () {},
    "show": function () {},
    "siblings": function () {},
    "size": function () {},
    "slice": function () {},
    "slideDown": function () {},
    "slideToggle": function () {},
    "slideUp": function () {},
    "sort": function () {},
    "splice": function () {},
    "stop": function () {},
    "submit": function () {},
    "text": function () {},
    "toArray": function () {},
    "toggle": function () {},
    "toggleClass": function () {},
    "trigger": function () {},
    "triggerHandler": function () {},
    "unbind": function () {},
    "undelegate": function () {},
    "unload": function () {},
    "unwrap": function () {},
    "val": function () {},
    "width": function () {},
    "wrap": function () {},
    "wrapAll": function () {},
    "wrapInner": function () {}
  };
  jQuery.fx.prototype = {
    "cur": function () {},
    "custom": function () {},
    "hide": function () {},
    "show": function () {},
    "step": function () {},
    "update": function () {}
  };
  jQuery.hubConnection.prototype = {
    "_": function () {},
    "_maximizeClientHubInvocation": function () {},
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "_registerSubscribedHubs": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "createHubProxy": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "lastError": function () {},
    "log": function () {},
    "logging": function () {},
    "qs": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {},
    "url": function () {}
  };
  jQuery.hubConnection.fn.init.prototype = {
    "_": function () {},
    "_maximizeClientHubInvocation": function () {},
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "_registerSubscribedHubs": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "createHubProxy": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "lastError": function () {},
    "log": function () {},
    "logging": function () {},
    "qs": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {},
    "url": function () {}
  };
  jQuery.signalR.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  jQuery.signalR.fn.init.prototype = {
    "_originalJson": function () {},
    "_parseResponse": function () {},
    "ajaxDataType": function () {},
    "clientProtocol": function () {},
    "connectionSlow": function () {},
    "contentType": function () {},
    "disconnectTimeout": function () {},
    "disconnected": function () {},
    "error": function () {},
    "init": function () {},
    "isCrossDomain": function () {},
    "json": function () {},
    "keepAliveWarnAt": function () {},
    "log": function () {},
    "logging": function () {},
    "received": function () {},
    "reconnectDelay": function () {},
    "reconnectWindow": function () {},
    "reconnected": function () {},
    "reconnecting": function () {},
    "send": function () {},
    "start": function () {},
    "starting": function () {},
    "state": function () {},
    "stateChanged": function () {},
    "stop": function () {},
    "transportConnectTimeout": function () {}
  };
  /**********************************************************************
   * End Generated Extern for jQuery
  /**********************************************************************/